---
title: "In-class Exercise 1: My First Date with Geospatial Data Science"
author: "Chai Zhixuan"
editor: visual
date: 2023-11-18
date-format: long
date-modified: "last-modified"
---

## **The Task**

In this in-class exercise, you are required to prepare a choropleth map showing the distribution of passenger trips at planning sub-zone by integrating *Passenger Volume by Origin Destination Bus Stops* and bus stop data sets downloaded from LTA DataMall and Planning Sub-zone boundary of URA Master Plan 2019 downloaded from data.gov.sg.

![](images/Capture.PNG)

The specific task of this in-class exercise are as follows:

-   to import *Passenger Volume by Origin Destination Bus Stops* data set downloaded from LTA DataMall in to RStudio environment,

-   to import geospatial data in ESRI shapefile format into sf data frame format,

-   to perform data wrangling by using appropriate functions from tidyverse and sf pakcges, and

-   to visualise the distribution of passenger trip by using tmap methods and functions.

## **Getting Started**

Three R packages will be used in this in-class exercise, they are:

-   tidyverse for non-spatial data handling,

-   sf for geospatial data handling,

-   tmap for thematic mapping, and

-   knitr for creating html table.

```{r}
pacman::p_load(tmap, sf, tidyverse, knitr)
```

## **Importing the OD data**

Firstly, we will import the *Passenger Volume by Origin Destination Bus Stops* data set downloaded from LTA DataMall by using `read_csv()` of **readr** package.

```{r}
odbus <- read_csv("data/aspatial/origin_destination_bus_202308.csv")
```

A quick check of odbus tibble data frame shows that the values in OROGIN_PT_CODE and DESTINATON_PT_CODE are in numeric data type.

```{r}
glimpse(odbus)
```

```{r}
odbus$ORIGIN_PT_CODE <- as.factor(odbus$ORIGIN_PT_CODE)
odbus$DESTINATION_PT_CODE <- as.factor(odbus$DESTINATION_PT_CODE) 
```

Notice that both of them are in factor data type now.

```{r}
glimpse(odbus)
```

### **Extracting the study data**

```{r}
origin7_9 <- odbus %>%
  filter(DAY_TYPE == "WEEKDAY") %>%
  filter(TIME_PER_HOUR >= 7 &
           TIME_PER_HOUR <= 9) %>%
  group_by(ORIGIN_PT_CODE) %>%
  summarise(TRIPS = sum(TOTAL_TRIPS))
```

It should look similar to the data table below.

```{r}
kable(head(origin7_9))
```

We will save the output in rds format for future used.

```{r}
write_rds(origin7_9, "data/origin7_9.rds")
```

The code chunk below will be used to import the save origin7_9.rds into R environment.

```{r}
origin7_9 <- read_rds("data/origin7_9.rds")
```

## **Working with Geospatial Data**

In this section, you are required to import two shapefile into RStudio, they are:

-   BusStop: This data provides the location of bus stop as at last quarter of 2022.

-   MPSZ-2019: This data provides the sub-zone boundary of URA Master Plan 2019.

### **Importing geospatial data**

```{r}
busstop <- st_read(dsn = "data/geospatial",
                   layer = "BusStop") %>%
  st_transform(crs = 3414)
```

```{r}
glimpse(busstop)
```

```{r}
mpsz <- st_read(dsn = "data/geospatial",
                   layer = "MPSZ-2019") %>%
  st_transform(crs = 3414)
```

The structure of `mpsz` sf tibble data frame should look as below.

```{r}
glimpse(mpsz)
```

## **Geospatial data wrangling**

### **Combining Busstop and mpsz**

```{r}
busstop_mpsz <- st_intersection(busstop, mpsz) %>%
  select(BUS_STOP_N, SUBZONE_C) %>%
  st_drop_geometry()
```

Before moving to the next step, it is wise to save the output into rds format.

```{r}
write_rds(busstop_mpsz, "data/busstop_mpsz.csv")  
```

```{r}
origin_data <- left_join(origin7_9 , busstop_mpsz,
            by = c("ORIGIN_PT_CODE" = "BUS_STOP_N")) %>%
  rename(ORIGIN_BS = ORIGIN_PT_CODE,
         ORIGIN_SZ = SUBZONE_C)
```

Before continue, it is a good practice for us to check for duplicating records.

```{r}
duplicate <- origin_data %>%
  group_by_all() %>%
  filter(n()>1) %>%
  ungroup()
```

If duplicated records are found, the code chunk below will be used to retain the unique records.

```{r}
origin_data <- unique(origin_data)
```

```{r}
mpsz_origtrip <- left_join(mpsz, 
                           origin_data,
                           by = c("SUBZONE_C" = "ORIGIN_SZ"))
```

## **Choropleth Visualisation**

```{r}
tm_shape(mpsz_origtrip)+
  tm_fill("TRIPS", 
          style = "quantile", 
          palette = "Blues",
          title = "Passenger trips") +
  tm_layout(main.title = "Passenger trips generated at planning sub-zone level",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha =0.2) +
  tm_credits("Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\n and Population data from Department of Statistics DOS", 
             position = c("left", "bottom"))
```

---
title: "Take-home Exercise 1: Geospatial Analytics for Public Good"
author: "Chai Zhixuan"
editor: visual
date: 2023-11-22
date-format: long
date-modified: "last-modified"
---

# **1 Overview**

Transportation is a pivotal aspect of daily life for Singaporean residents. In 2022, an average of around 3.4 million passengers utilized public buses each day in Singapore, marking a steady rebound from the significant decline during the COVID-19 pandemic[^1]. Noteworthy advancements have been made in the enhancement of bus stops and interchanges, exemplified by projects like the Jurong Town Bus Interchange in November 2023[^2]. Additionally, there have been alterations in bus services, including the cancellation of service 167, reflecting ongoing developments in Singapore's transportation infrastructure [^3].

[^1]: https://www.statista.com/statistics/1006198/singapore-daily-public-bus-ridership/#:\~:text=Daily%20ridership%20of%20public%20buses%20Singapore%202015%2D2022&text=In%202022%2C%20an%20average%20of,COVID%2D19%20and%20its%20measures.

[^2]: https://theindependent.sg/lta-jurong-town-hall-bus-interchange-opens-in-november-2023/

[^3]: https://www.channelnewsasia.com/singapore/bus-service-167-ridership-falls-lta-commuters-unhappy-3928596

# **2 Getting Started**

## 2.1 Objectives

Exploratory Spatial Data Analysis (ESDA) hold tremendous potential to address complex problems facing society, such as transportation issue and development. In this study, I will demonstrate how to apply geospatial visualisation and appropriate Local Indicators of Spatial Association (LISA) to undercover the spatial and spatio-temporal mobility patterns of public bus passengers in Singapore. I will also propose some recommendations in this study.

## 2.2 The Study Area

The focus of this study would in Singapore, mainly the public bus passengers in Singapore

## 2.3 **Setting the Analytical Tools**

The code chunk below installs and loads tmap, sf, tidyverse, knitr, sfdep and plotly

```{r}
pacman::p_load(tmap, sf, tidyverse, knitr, sfdep, plotly)
```

# **3 Data Preparation**

## 3.1 Data

### **3.1.1 Aspatial data**

***Passenger Volume by Origin Destination Bus Stops*** will be downloaded from [LTA DataMall](https://datamall.lta.gov.sg/content/datamall/en.html). Aug 2023 dataset is dowloaded. This study will use only **Aug 2023** data.

Below are the detailed steps to obtain the dataset:

1.  Go to LTA DataMall -\> Head to Dynamic Datasets -\> Request for API Access

![](images/6.PNG){width="531"}

2.  You will receive an email with subject head " LTA DataMall \| Registration Confirmation". Please take note of the **API Account Key**

![](images/test.PNG){width="495"}

3.  The link [here](https://datamall.lta.gov.sg/content/dam/datamall/datasets/LTA_DataMall_API_User_Guide.pdf) explains how to make it API calls. It would be advisable to download [Postman](https://www.postman.com/). In Postman:

    a\. Enter the URL: "http://datamall2.mytransport.sg/ltaodataservice/PV/ODBus?"

    b.  Enter your AccountKey under "Headers". Add the date in "Params"

    ![](images/2.PNG){width="474"}

    ![](images/1.PNG){width="469"}

    c.  Click on the Send button. Download the CSV files

    ![](images/3.PNG){width="505"}

### **3.1.2 Geospatial data**

Two geospatial data will be used in this study, they are:

-   ***Bus Stop Location*** from LTA DataMall. It provides information about all the bus stops currently being serviced by buses, including the bus stop code (identifier) and location coordinates. This is downloaded from LTA DataMall -\> Static Datasets -\> Under Search Bar type: "Bus Stop" -\> Download the SHP file

![](images/4.PNG){width="532"}

-   ***hexagon***, a [hexagon](https://desktop.arcgis.com/en/arcmap/latest/tools/spatial-statistics-toolbox/h-whyhexagons.htm) layer of 250m (this distance is the perpendicular distance between the centre of the hexagon and its edges.). Guidance on how it is created is located [here](https://urbandatapalette.com/post/2021-08-tessellation-sf/).

::: callout-note
The steps to create the hexagon layer in this study is located in Section [4.2 Hexagon].
:::

## **3.2 Importing the data into R Environment**

### **3.2.1 Importing Aspatial data into R**

Firstly, we will import the *Passenger Volume by Origin Destination Bus Stops* data set downloaded from LTA DataMall by using `read_csv()` of **readr** package.

```{r}
odbus <- read_csv("data/aspatial/origin_destination_bus_202308.csv")
```

A quick check of odbus tibble data frame shows that the values in OROGIN_PT_CODE and DESTINATON_PT_CODE are in numeric data type.

```{r}
glimpse(odbus)
```

```{r}
odbus$ORIGIN_PT_CODE <- as.factor(odbus$ORIGIN_PT_CODE)
odbus$DESTINATION_PT_CODE <- as.factor(odbus$DESTINATION_PT_CODE) 
```

Now, ORIGIN_PT_CODE and DESTINATON_PT_CODE are in factor data type now.

```{r}
glimpse(odbus)
```

### 3.2.2 **Extracting the study data**

Data will extracted basing on the following timing:

![](images/5.PNG)

#### 3.2.2.1 For Weekday morning peak (6 to 9)

```{r}
origin6_9 <- odbus %>%
  filter(DAY_TYPE == "WEEKDAY") %>%
  filter(TIME_PER_HOUR >= 6 &
           TIME_PER_HOUR <= 9) %>%
  group_by(ORIGIN_PT_CODE) %>%
  summarise(TRIPS = sum(TOTAL_TRIPS))
```

```{r}
kable(head(origin6_9))
```

Output is saved in rds format for future used.

```{r}
write_rds(origin6_9, "data/rds/origin6_9.rds")
```

The code chunk below will be used to import the save origin6_9.rds into R environment.

```{r}
origin6_9 <- read_rds("data/rds/origin6_9.rds")
```

#### 3.2.2.2 For Weekday afternoon peak (17 to 20)

```{r}
origin17_20 <- odbus %>%
  filter(DAY_TYPE == "WEEKDAY") %>%
  filter(TIME_PER_HOUR >= 17 &
           TIME_PER_HOUR <= 20) %>%
  group_by(ORIGIN_PT_CODE) %>%
  summarise(TRIPS = sum(TOTAL_TRIPS))
```

```{r}
kable(head(origin17_20))
```

```{r}
write_rds(origin17_20, "data/rds/origin17_20.rds")
```

```{r}
origin17_20 <- read_rds("data/rds/origin17_20.rds")
```

#### 3.2.2.3 For Weekend/holiday morning peak (11 to 14)

```{r}
origin11_14 <- odbus %>%
  filter(DAY_TYPE == "WEEKENDS/HOLIDAY") %>%
  filter(TIME_PER_HOUR >= 11 &
           TIME_PER_HOUR <= 14) %>%
  group_by(ORIGIN_PT_CODE) %>%
  summarise(TRIPS = sum(TOTAL_TRIPS))
```

```{r}
kable(head(origin11_14))
```

```{r}
write_rds(origin11_14, "data/rds/origin11_14.rds")
```

```{r}
origin11_14 <- read_rds("data/rds/origin11_14.rds")
```

#### 3.2.2.4 For Weekend/holiday evening peak (16 to 19)

```{r}
origin16_19 <- odbus %>%
  filter(DAY_TYPE == "WEEKENDS/HOLIDAY") %>%
  filter(TIME_PER_HOUR >= 16 &
           TIME_PER_HOUR <= 19) %>%
  group_by(ORIGIN_PT_CODE) %>%
  summarise(TRIPS = sum(TOTAL_TRIPS))
```

```{r}
kable(head(origin16_19))
```

```{r}
write_rds(origin16_19, "data/rds/origin16_19.rds")
```

```{r}
origin16_19 <- read_rds("data/rds/origin16_19.rds")
```

### **3.2.3 Importing Geospatial data into R**

#### 3.2.3.1 BusStop

In this section, I will import one shapefile into RStudio, it is:

-   BusStop: This data provides the location of bus stop as at last quarter of 2023.

```{r}
busstop <- st_read(dsn = "data/geospatial",
                   layer = "BusStop") %>%
  st_transform(crs = 3414)
```

The structure of `busstop` sf tibble data frame should look as below.

```{r}
glimpse(busstop)
```

# **4 Geospatial data wrangling**

## 4.1 Combining busstop and origin6_9

busstop and origin6_9 dataset are combined by left join with the unique identifer: "ORIGIN_PT_CODE" in origin6_9 and "BUS_STOP_N" in busstop

```{r}
origintrip_SZ <- left_join(origin6_9, 
                           busstop,
                           by = c("ORIGIN_PT_CODE" = "BUS_STOP_N"))
```

Next, I will make the combine dataset a shape file

```{r}
test_points_1 = origintrip_SZ %>%
  st_as_sf(crs = 3414)

head(test_points_1)
```

## 4.2 Hexagon

From the link located [here](https://urbandatapalette.com/post/2021-08-tessellation-sf/), a **Hexagon grid (honeycomb)** is created with the from test_points_1 above:

```{r}
# cell size of layer of 250m
area_honeycomb_grid = st_make_grid(test_points_1, c(500, 500), what = "polygons", square = FALSE, crs = 3414)

# To sf and add grid ID
honeycomb_grid_sf = st_sf(area_honeycomb_grid)

```

Save the shape file to aspatial folder

```{r}
st_write(honeycomb_grid_sf, "data/aspatial/hexagon.shp",append=TRUE)
```

## 4.3 Import back Hexagon Shape File and combine with busstop and Weekday morning peak (6am to 9am)

The file is saved and imported back:

```{r}
mpsz <- st_read(dsn = "data/geospatial",
                   layer = "hexagon") %>%
  st_transform(crs = 3414)
```

```{r}
glimpse(mpsz)
```

```{r}
busstop_mpsz <- st_intersection(busstop, mpsz) %>%
   st_drop_geometry()
```

Before moving to the next step, I save the output into rds format.

```{r}
write_rds(busstop_mpsz, "data/rds/busstop_mpsz.rds")  
```

Next, I append the hexagon from busstop_mpsz data frame onto origin6_9 data frame.

```{r}
origin_SZ <- left_join(origin6_9 , busstop_mpsz,
            by = c("ORIGIN_PT_CODE" = "BUS_STOP_N"))
```

Before continue, the code chunk below shows how it is done to check for duplicating records.

```{r}
duplicate <- origin_SZ %>%
  group_by_all() %>%
  filter(n()>1) %>%
  ungroup()
```

The code chunk below will be used to retain the unique records.

```{r}
origin_SZ <- unique(origin_SZ)
```

Updated records with no duplicate is compbined with mpsz

```{r}
mpsz_origtrip <- inner_join(mpsz, 
                           origin_SZ,
                           by = c("FID" = "FID"))
```

# **5 Geovisualisation and Analysis**

## **5.1 Weekday morning peak -** 6am to 9am

A choropleth map is plotted showing the distribution of passenger trips:

```{r}
tmap_mode("plot")
tm_shape(mpsz_origtrip)+
  tm_fill("TRIPS", 
          style = "quantile", 
          palette = "Blues",
          title = "Passenger trips") +
  tm_layout(main.title = "Passenger trips generated by origin at the hexagon level (Weekday morning peak - 6am to 9am)",
            main.title.position = "center",
            main.title.size = 0.8,
            legend.height = 0.45, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha =0.2) +
  tm_credits("Source: Passenger trips data from LTA", 
             position = c("left", "bottom"))
```

The Choropleth Visualization above indicates a generally high number of passengers, largely attributed to students commuting to school and individuals traveling to work. However, some areas stand out as anomalies, displaying notably high passenger numbers despite surrounding areas experiencing lower passenger traffic. Notably, from the western perspective, Tuas Cres Station Exit A (23,219 passengers) and Joo Koon Station Exit A and Exit B (34,764 passengers) exhibit significant passenger trips. Moving towards the north, Woodlands Checkpoint (105,938 passengers) and Johor Bahru Checkpoint (97,009 passengers) also demonstrate elevated passenger activity. There are also a few estate areas with high passenger activity in a cluster with low passenger activity: Blk 421C (9,406 passengers), After Springleaf road (12,951 passengers).

Descriptive Statistics is shown below:

```{r}
summary(mpsz_origtrip$TRIPS)
```

Histogram plot is shown below. As expected, it is a right skewed histogram:

```{r}
ggplot(data=mpsz_origtrip, 
       aes(x= (TRIPS)))+
  geom_histogram(bins=100, 
                 color="black", 
                 fill="light blue") +
  labs(title = "How are passenger trips distributed in Singapore?",
      x = "Passenger Trips",
      y = "Frequency")
```

## **5.2 Weekday afternoon peak -** 5pm to 8pm

Append the hexagon from busstop_mpsz data frame onto origin17_20 data frame. The steps will be the same as above from Section \[5.1 Weekday morning peak - 6am to 9am\]

```{r}
origin_SZ2 <- left_join(origin17_20 , busstop_mpsz,
            by = c("ORIGIN_PT_CODE" = "BUS_STOP_N"))
```

```{r}
duplicate <- origin_SZ2 %>%
  group_by_all() %>%
  filter(n()>1) %>%
  ungroup()
```

```{r}
origin_SZ2 <- unique(origin_SZ2)
```

```{r}
mpsz_origtrip1 <- inner_join(mpsz, 
                           origin_SZ2,
                           by = c("FID" = "FID"))
```

```{r}
tmap_mode("plot")
tm_shape(mpsz_origtrip1)+
  tm_fill("TRIPS", 
          style = "quantile", 
          palette = "Blues",
          title = "Passenger trips") +
  tm_layout(main.title = "Passenger trips generated by origin at the hexagon level (Weekday afternoon peak - 5pm to 8pm)",
            main.title.position = "center",
            main.title.size = 0.8,
            legend.height = 0.45, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha =0.2) +
  tm_credits("Source: Passenger trips data from LTA", 
             position = c("left", "bottom"))
```

\
The Choropleth Visualization depicts heightened passenger volumes, notably concentrated around central zones like Orchard and Somerset stations, as well as the west-central area encompassing the Queenstown region. This surge in numbers may be attributed to post-work commuters frequenting eateries and entertainment hubs within the central precinct.

Notably, Joo Koon station (6,100 passengers) exhibits a substantial influx of passengers, potentially stemming from the conclusion of work hours and the discharge of full-time national servicemen. This trend is similarly observed in stations proximate to Gedong Camp (3,276 passengers). Furthermore, heightened passenger activity is evident at Woodlands Checkpoint, Johor Bahru Checkpoint, and the Senoko region.

Descriptive Statistics is shown below:

```{r}
summary(mpsz_origtrip1$TRIPS)
```

Histogram plot is shown below. As expected, it is a right skewed histogram:

```{r}
ggplot(data=mpsz_origtrip1, 
       aes(x= (TRIPS)))+
  geom_histogram(bins=100, 
                 color="black", 
                 fill="light blue") +
  labs(title = "How are passenger trips distributed in Singapore?",
      x = "Passenger Trips",
      y = "Frequency")
```

## **5.3 Weekend/holiday morning peak -** 11am to 2pm

Append the hexagon from busstop_mpsz data frame onto origin11_14 data frame. The steps will be the same as above.

```{r}
origin_SZ3 <- left_join(origin11_14 , busstop_mpsz,
            by = c("ORIGIN_PT_CODE" = "BUS_STOP_N"))
```

```{r}
duplicate <- origin_SZ3 %>%
  group_by_all() %>%
  filter(n()>1) %>%
  ungroup()
```

```{r}
origin_SZ3 <- unique(origin_SZ3)
```

```{r}
mpsz_origtrip3 <- inner_join(mpsz, 
                           origin_SZ3,
                           by = c("FID" = "FID"))
```

```{r}
tmap_mode("plot")
tm_shape(mpsz_origtrip3)+
  tm_fill("TRIPS", 
          style = "quantile", 
          palette = "Blues",
          title = "Passenger trips") +
  tm_layout(main.title = "Passenger trips generated by origin at the hexagon level (Weekend/holiday morning peak - 11am to 2pm)",
            main.title.position = "center",
            main.title.size = 0.8,
            legend.height = 0.45, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha =0.2) +
  tm_credits("Source: Hexagon level\n and Passenger trips data from LTA", 
             position = c("left", "bottom"))

```

The Choropleth Visualization shows a decrease in passenger volumes in comparison to the two preceding plots (lesser number of dark hexagons). Likewise, there is a notable concentration of high activity around central zones such as Orchard and Somerset stations. This increase in numbers might be linked to families gathering for brunch or lunch.

It's worth mentioning that Joo Koon station experiences lower passenger volumes on weekends (871 passengers), as fewer individuals are commuting to work in the Tuas area.

Woodlands and Johor Bahru checkpoints alos exhibits high passengers volumes (43,602 passengers).

Descriptive Statistics is shown below:

```{r}
summary(mpsz_origtrip3$TRIPS)
```

Histogram plot is shown below. As expected, it is a right skewed histogram:

```{r}
ggplot(data=mpsz_origtrip3, 
       aes(x= (TRIPS)))+
  geom_histogram(bins=100, 
                 color="black", 
                 fill="light blue") +
  labs(title = "How are passenger trips distributed in Singapore?",
      x = "Passenger Trips",
      y = "Frequency")
```

## **5.4 Weekend/holiday evening peak -** 4pm to 7pm

Append the hexagon from busstop_mpsz data frame onto origin16_20 data frame. The steps will be the same as above.

```{r}
origin_SZ4 <- left_join(origin16_19, busstop_mpsz,
            by = c("ORIGIN_PT_CODE" = "BUS_STOP_N"))
```

```{r}
duplicate <- origin_SZ4 %>%
  group_by_all() %>%
  filter(n()>1) %>%
  ungroup()
```

```{r}
origin_SZ4 <- unique(origin_SZ4)
```

```{r}
mpsz_origtrip4 <- inner_join(mpsz, 
                           origin_SZ4,
                           by = c("FID" = "FID"))
```

```{r}
tmap_mode("plot")
tm_shape(mpsz_origtrip4)+
  tm_fill("TRIPS", 
          style = "quantile", 
          palette = "Blues",
          title = "Passenger trips") +
  tm_layout(main.title = "Passenger trips generated by origin at the hexagon level (Weekend/holiday evening peak - 4pm to 7pm)",
            main.title.position = "center",
            main.title.size = 0.8,
            legend.height = 0.45, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha =0.2) +
  tm_credits("Source: Hexagon level\n and Passenger trips data from LTA", 
             position = c("left", "bottom"))
```

The Choropleth Visualization seems to be similar to the previous plot for Weekend/holiday morning peak - 11am to 2pm. Likewise, there is a notable concentration of high activity around central zones such as Orchard and Somerset stations. This increase in numbers might be linked to families gathering for dinner.

It's worth mentioning that Joo Koon station experiences lower passenger volumes on weekends (2083 passengers), as fewer individuals are commuting to work in the Tuas area.

Woodlands and Johor Bahru checkpoint still exhibits high passenger volumes (60,597 passengers).

Descriptive Statistics is shown below:

```{r}
summary(mpsz_origtrip4$TRIPS)
```

Histogram plot is shown below. As expected, it is a right skewed histogram:

```{r}
ggplot(data=mpsz_origtrip4, 
       aes(x= (TRIPS)))+
  geom_histogram(bins=100, 
                 color="black", 
                 fill="light blue") +
  labs(title = "How are passenger trips distributed in Singapore?",
      x = "Passenger Trips",
      y = "Frequency")
```

## 5.5 Comparing all peak hour period

From all the Choropleth Visualization above, a few notable observations:

1.  Woodlands Checkpoint and Johor Bahru Checkpoint consistently exhibit high passenger volumes. This might be attributed to daily commuting between Malaysia and Singapore for work. On weekends, there could be Singaporeans traveling to Malaysia for shopping and leisure activities.
2.  Orchard and Somerset stations consistently record high passenger volumes, except during the weekday morning peak hours (6 am to 9 am). This high passenger volumes might be due to individuals traveling to central locations for their meals. In addition, as it is the central business distinct area, most companies will be in central area. This explains the influx of passenger volumes in these areas[^4].

[^4]: https://www.corporateservicessingapore.com/7-popular-business-locations-singapore/

# **6 Local Indicators of Spatial Association (LISA) Analysis**

## 6.1 **Weekday morning peak -** 6am to 9am

### **6.1.1 Deriving contiguity weights: Queen's method**

In the code chunk below, queen method is used to derive the contiguity weights.

```{r}
wm_q <- mpsz_origtrip%>%
  mutate(nb = st_contiguity(geometry),
         wt = st_weights(nb,
                         style = "W",
                         allow_zero = TRUE),
         .before =1) 
        
```

```{r}
wm_q
```

### **6.1.2 Computing local Moran's I**

I will compute Local Moran's I of TRIPS at hexagon level by using [`local_moran()`](https://sfdep.josiahparry.com/reference/local_moran.html) of sfdep package.

```{r}
lisa <- wm_q %>% 
  mutate(local_moran = local_moran(
    TRIPS, nb, wt, nsim = 99,zero.policy= TRUE, na.action = na.exclude),
         .before = 1) %>%
  unnest(local_moran)
```

### 6.1.3 **Visualising local Moran's I**

In this code chunk below, tmap functions are used prepare a choropleth map by using value in the *ii* field.

```{r}
tmap_mode("plot")
tm_shape(lisa) +
  tm_fill("ii") + 
  tm_borders(alpha = 0.5) +
  tm_view(set.zoom.limits = c(6,8)) +
  tm_layout(main.title = "local Moran's I of TRIPS",
            main.title.size = 0.8)
```

From the plot above, majority of the hexagon layers seem to have values of local Moran's I of -10 to 10. With an exception of one point of value 40 to 50.

### **6.1.4 Visualising p-value of local Moran's I**

```{r}
tmap_mode("plot")
tm_shape(lisa) +
  tm_fill("p_ii_sim",
          breaks = c(0, 0.001, 0.01, 0.05, 1),
              labels = c("0.001", "0.01", "0.05", "Not sig")) + 
  tm_borders(alpha = 0.5) +
   tm_layout(main.title = "p-value of local Moran's I",
            main.title.size = 0.8)
```

Majority of the hexagon layers are not significant. However, there are a few layers of p value that are significant. It is notable in the west region of Singapore.

### 6.1.5 **Visualising local Moran's I and p-value**

Both maps next to each other as shown below.

```{r}
tmap_mode("plot")
map1 <- tm_shape(lisa) +
  tm_fill("ii") + 
  tm_borders(alpha = 0.5) +
  tm_view(set.zoom.limits = c(6,8)) +
  tm_layout(main.title = "local Moran's I of TRIPS",
            main.title.size = 0.8)

map2 <- tm_shape(lisa) +
  tm_fill("p_ii_sim",
          breaks = c(0, 0.001, 0.01, 0.05, 1),
              labels = c("0.001", "0.01", "0.05", "Not sig")) + 
  tm_borders(alpha = 0.5) +
  tm_layout(main.title = "p-value of local Moran's I",
            main.title.size = 0.8)

tmap_arrange(map1, map2, ncol = 2)
```

### 6.1.6 **Visualising LISA map**

```{r}
lisa_sig <- lisa  %>%
  filter(p_ii_sim < 0.05)
tmap_mode("plot")
tm_shape(lisa) +
  tm_polygons() +
  tm_borders(alpha = 0.5) +
tm_shape(lisa_sig) +
  tm_fill("mean") + 
  tm_borders(alpha = 0.4)
```

The map above indicates that most low-low occurrences are seen around Tuas and near Gedong Camp. This aligns with expectations due to the presence of various industrial zones in Tuas, and fewer visits to army camps, showcasing contrasting values in close proximity.

Furthermore, high-high instances are noticed in specific sections of Woodlands and the Dover area.

No instances of low-high or high-low are observed in the data.

## 6.2 **Weekday afternoon peak -** 5pm to 8pm

### **6.2.1 Deriving contiguity weights: Queen's method**

In the code chunk below, queen method is used to derive the contiguity weights.

```{r}
wm_q2 <- mpsz_origtrip1%>%
  mutate(nb = st_contiguity(geometry),
         wt = st_weights(nb,
                         style = "W",
                         allow_zero = TRUE),
         .before =1) 
```

```{r}
wm_q2
```

### **6.2.2 Computing local Moran's I**

I will compute Local Moran's I of TRIPS at hexagon level by using [`local_moran()`](https://sfdep.josiahparry.com/reference/local_moran.html) of sfdep package.

```{r}
lisa2 <- wm_q2 %>% 
  mutate(local_moran = local_moran(
    TRIPS, nb, wt, nsim = 99,zero.policy= TRUE, na.action = na.exclude),
         .before = 1) %>%
  unnest(local_moran)
```

### 6.2.3 **Visualising local Moran's I**

In this code chunk below, tmap functions are used prepare a choropleth map by using value in the *ii* field.

```{r}
tmap_mode("plot")
tm_shape(lisa2) +
  tm_fill("ii") + 
  tm_borders(alpha = 0.5) +
  tm_view(set.zoom.limits = c(6,8)) +
  tm_layout(main.title = "local Moran's I of TRIPS",
            main.title.size = 0.8)
```

From the plot above, majority of the hexagon layers seem to have values of local Moran's I of -10 to 10. With an exception of one point of value 40 to 50.

### **6.2.4 Visualising p-value of local Moran's I**

```{r}
tmap_mode("plot")
tm_shape(lisa2) +
  tm_fill("p_ii_sim",
          breaks = c(0, 0.001, 0.01, 0.05, 1),
              labels = c("0.001", "0.01", "0.05", "Not sig")) + 
  tm_borders(alpha = 0.5) +
   tm_layout(main.title = "p-value of local Moran's I",
            main.title.size = 0.8)
```

Majority of the hexagon layers are not significant. However, there are a few layers of p value that are significant, notable in the Tuas and Gedong camp region.

### 6.2.5 **Visualising local Moran's I and p-value**

Both maps next to each other as shown below.

```{r}
tmap_mode("plot")
map1 <- tm_shape(lisa2) +
  tm_fill("ii") + 
  tm_borders(alpha = 0.5) +
  tm_view(set.zoom.limits = c(6,8)) +
  tm_layout(main.title = "local Moran's I of TRIPS",
            main.title.size = 0.8)

map2 <- tm_shape(lisa2) +
  tm_fill("p_ii_sim",
          breaks = c(0, 0.001, 0.01, 0.05, 1),
              labels = c("0.001", "0.01", "0.05", "Not sig")) + 
  tm_borders(alpha = 0.5) +
  tm_layout(main.title = "p-value of local Moran's I",
            main.title.size = 0.8)

tmap_arrange(map1, map2, ncol = 2)
```

### 6.2.6 **Visualising LISA map**

```{r}
lisa_sig2 <- lisa2  %>%
  filter(p_ii_sim < 0.05)
tmap_mode("plot")
tm_shape(lisa) +
  tm_polygons() +
  tm_borders(alpha = 0.5) +
tm_shape(lisa_sig) +
  tm_fill("mean") + 
  tm_borders(alpha = 0.4)
```

From the plot above, low-low are observed in areas such as Tuas, near Gedong Camp. However, in this plot, areas in Queenstown area also consists of low-low.

In addition, high-high are observed in areas such as Woodlands.

Similarly, there are no high-low and low-high values.

## 6.3 **Weekend/holiday morning peak -** 11am to 2pm

### **6.3.1 Deriving contiguity weights: Queen's method**

In the code chunk below, queen method is used to derive the contiguity weights.

```{r}
wm_q3 <- mpsz_origtrip3%>%   
  mutate(nb = st_contiguity(geometry),          
         wt = st_weights(nb,                          
                         style = "W",                          
                         allow_zero = TRUE),          
         .before =1) 
```

```{r}
wm_q3
```

### **6.3.2 Computing local Moran's I**

I will compute Local Moran's I of TRIPS at hexagon level by using [`local_moran()`](https://sfdep.josiahparry.com/reference/local_moran.html) of sfdep package.

```{r}
lisa3 <- wm_q3 %>%    
  mutate(local_moran = local_moran(     
    TRIPS, nb, wt, nsim = 99,
    zero.policy= TRUE, na.action = na.exclude),          .before = 1) %>%   
  unnest(local_moran)
```

### 6.3.3 **Visualising local Moran's I**

In this code chunk below, tmap functions are used prepare a choropleth map by using value in the *ii* field.

```{r}
tmap_mode("plot") 
tm_shape(lisa3) +   
  tm_fill("ii") +    
  tm_borders(alpha = 0.5) +  
  tm_view(set.zoom.limits = c(6,8)) +   
  tm_layout(main.title = "local Moran's I of TRIPS",            
            main.title.size = 0.8)
```

From the plot above, majority of the hexagon layers seem to have values of local Moran's I of -10 to 10. With an exception of one point of value 40 to 50.

### **6.3.4 Visualising p-value of local Moran's I**

```{r}
tmap_mode("plot") 
tm_shape(lisa3) +   
  tm_fill("p_ii_sim",          
          breaks = c(0, 0.001, 0.01, 0.05, 1),               
          labels = c("0.001", "0.01", "0.05", "Not sig")) +    
  tm_borders(alpha = 0.5) +    
  tm_layout(main.title = "p-value of local Moran's I",            
            main.title.size = 0.8)
```

Majority of the hexagon layers are not significant. However, there are a few layers of p value that are significant.

### 6.3.5 **Visualising local Moran's I and p-value**

Both maps next to each other as shown below.

```{r}
tmap_mode("plot") 
map1 <- tm_shape(lisa3) +   
  tm_fill("ii") +    
  tm_borders(alpha = 0.5) +   
  tm_view(set.zoom.limits = c(6,8)) +   
  tm_layout(main.title = "local Moran's I of TRIPS",             
            main.title.size = 0.8)  
map2 <- tm_shape(lisa3) +   
  tm_fill("p_ii_sim",           
          breaks = c(0, 0.001, 0.01, 0.05, 1),               
          labels = c("0.001", "0.01", "0.05", "Not sig")) +    
  tm_borders(alpha = 0.5) +   
  tm_layout(main.title = "p-value of local Moran's I",             
            main.title.size = 0.8)  
tmap_arrange(map1, map2, ncol = 2)
```

### 6.3.6 **Visualising LISA map**

```{r}
lisa_sig3 <- lisa3  %>%   
  filter(p_ii_sim < 0.05) 
tmap_mode("plot") 
tm_shape(lisa) +   
  tm_polygons() +   
  tm_borders(alpha = 0.5) + 
  tm_shape(lisa_sig) +   
  tm_fill("mean") +    
  tm_borders(alpha = 0.4)
```

From the plot above, low-low are observed in areas such as Tuas, near Gedong Camp, and even Queenstown area. In addition, high-high are observed in areas such Commonwealth.

Similarly, there are no high-low and low-high.

## **6.4 Weekend/holiday evening peak -** 4pm to 7pm

### **6.4.1 Deriving contiguity weights: Queen's method**

In the code chunk below, queen method is used to derive the contiguity weights.

```{r}
wm_q4 <- mpsz_origtrip4%>%      
  mutate(nb = st_contiguity(geometry),                    
         wt = st_weights(nb,                                              
                         style = "W",                                                    allow_zero = TRUE),                    
         .before =1) 
```

```{r}
wm_q4
```

### **6.4.2 Computing local Moran's I**

I will compute Local Moran's I of TRIPS at hexagon level by using [`local_moran()`](https://sfdep.josiahparry.com/reference/local_moran.html) of sfdep package.

```{r}
lisa4 <- wm_q4 %>%       
  mutate(local_moran = local_moran(          
    TRIPS, nb, wt, nsim = 99,zero.policy= TRUE, na.action = na.exclude),          .before = 1) %>%   unnest(local_moran)
```

### 6.4.3 **Visualising local Moran's I**

In this code chunk below, tmap functions are used prepare a choropleth map by using value in the *ii* field.

```{r}
tmap_mode("plot")  
tm_shape(lisa4) +      
  tm_fill("ii") +       
  tm_borders(alpha = 0.5) +     
  tm_view(set.zoom.limits = c(6,8)) +      
  tm_layout(main.title = "local Moran's I of TRIPS",                         main.title.size = 0.8)
```

From the plot above, majority of the hexagon layers seem to have values of local Moran's I of -10 to 10. With an exception of two points of value 40 to 50.

### **6.4.4 Visualising p-value of local Moran's I**

```{r}
tmap_mode("plot")  
tm_shape(lisa4) +      
  tm_fill("p_ii_sim",                     
          breaks = c(0, 0.001, 0.01, 0.05, 1),                          
          labels = c("0.001", "0.01", "0.05", "Not sig")) +       
  tm_borders(alpha = 0.5) +       
  tm_layout(main.title = "p-value of local Moran's I",                         main.title.size = 0.8)
```

Majority of the hexagon layers are not significant. However, there are a few layers of p value that are significant, again in Tuas and near Gedong camp region.

### 6.4.5 **Visualising local Moran's I and p-value**

Both maps next to each other as shown below.

```{r}
tmap_mode("plot")  
map1 <- tm_shape(lisa4) +      
  tm_fill("ii") +       
  tm_borders(alpha = 0.5) +      
  tm_view(set.zoom.limits = c(6,8)) +      
  tm_layout(main.title = "local Moran's I of TRIPS",                          main.title.size = 0.8)   

map2 <- tm_shape(lisa4) +      
  tm_fill("p_ii_sim",                      
          breaks = c(0, 0.001, 0.01, 0.05, 1),                          
          labels = c("0.001", "0.01", "0.05", "Not sig")) +       
  tm_borders(alpha = 0.5) +      
  tm_layout(main.title = "p-value of local Moran's I",                          main.title.size = 0.8)   

tmap_arrange(map1, map2, ncol = 2)
```

### 6.4.6 **Visualising LISA map**

```{r}
lisa_sig4 <- lisa4  %>%      
  filter(p_ii_sim < 0.05)  
tmap_mode("plot")  
tm_shape(lisa) +      
  tm_polygons() +      
  tm_borders(alpha = 0.5) +    
  tm_shape(lisa_sig) +      
  tm_fill("mean") +       
  tm_borders(alpha = 0.4)
```

From the plot above, low-low are observed in areas such as Tuas, areas near Gedong Camp, and Queenstown area. In addition, high-high are observed in areas such Commonwealth.

## 6.5 Comparing all peak hour period

Across all the LISA maps, a notable prevalence of low-low instances is evident in Tuas and neighboring regions close to Gedong Camp. This can be possible explained by the concentration of industrial zones in Tuas and fewer visits to nearby region near army camp reinforces the proximity of contrasting values.

Furthermore, the occurrence of high-high instances lacks consistency across all the LISA maps, showcasing variations from Woodlands to Commonwealth areas.

The amalgamation of information from both the LISA maps and geospatial visualization highlights Tuas, Woodlands, and areas near Gedong Camp as significant points of interest in Singapore's bus transportation development.

# **7 Conclusion**

The passengers volume of the different areas are examined in this study. The persistent issue of extensive waiting times at Woodlands and Tuas checkpoints during peak periods, such as Polling Day and the start of school holidays [^5], along with the appalling 4.5-hour queues experienced on Vesak Day weekend[^6], highlights a critical problem impacting commuters' daily lives and travel plans.

[^5]: https://www.asiaone.com/singapore/waited-bus-1-hour-commuters-stuck-woodlands-tuas-checkpoints-polling-day-september-school-holidays

[^6]: https://mothership.sg/2023/06/jams-sg-jb-causeway-vesak-day/

One possible solution will be to provide real-time updates on traffic conditions and anticipated waiting times through mobile apps, websites, or electronic signboards. This information would enable commuters to plan their journeys more effectively and choose alternative routes if necessary.

In regions like Tuas and areas adjacent to Gedong Camp, it would be beneficial to establish additional bus stops or enhance bus services to facilitate passenger commutes.

Further studies can done to explore using the Sep and Oct 2023 dataset.

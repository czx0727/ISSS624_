---
title: "In-class Exercise 4: Geospatial Data Science With R"
author: "Chai Zhixuan"
editor: visual
date: 2023-12-09
date-format: long
date-modified: "last-modified"
---

# Getting Started

```{r}
pacman:: p_load(tidyverse, sf, httr, tmap)
```

# Geocoding using SLA API

```{r}
url <- "https://www.onemap.gov.sg/api/common/elastic/search"
```

```{r}
csv <- read_csv("data/aspatial/Generalinformationofschools.csv")
postcodes <- csv$'postal_code'

# found <- data.frame()
# not_found <- data.frame()
# 
# for(postcode in postcodes){
#   query <- list('searchVAL'=postcode, 'returnGeom' = 'Y', 'getAddrDetails' = 'Y', 'pageNum' = '1')
#   res <- GET(url,query=query)
#   
#   if((content(res)$found)!=0){
#     found <-rbind(found,data.frame(content(res))[4:13])
#   } else{
#     not_found = data.frame(postcode)
#   }
#     
# }
```

```{r}
# merged = merge(csv,found, by.x ='postal_code', by.y ='results.POSTAL', all = TRUE)
# 
# write.csv(merged, file="data/aspatial/schools.csv")
# write.csv(not_found, file ="data/aspatial/not_found.csv")
```

# Converting an aspatial data into sf tibble data.frame

```{r}
# school <- read.csv("data/aspatial/schools.csv") %>%
#   rename(latitude = "results.LATITUDE",
#          longitude = "results.LONGITUDE") %>%
#   select(postal_code, school_name, latitude, longitude)
```

Change from decimal degree to metres

```{r}
# schools_sf <- st_as_sf(schools,
#                        coords = c("longitude", "latitude"),
#                        crs=4326) %>%
#   st_transform(crs = 3414)
```

```{r}
# tmap_mode("view")
# tm_shape(schools_sf) +
#   tm_dots() +
# tm_view(set_zoom_limits = c(11,14))
```

```{r}
# mpsz$'SCHOOL_COUNT' <- lengths(
#   st_intersects(
#     mpsz, schools_sf))
```

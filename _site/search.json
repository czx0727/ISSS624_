[
  {
    "objectID": "take_home_ex2/take_home_ex2.html",
    "href": "take_home_ex2/take_home_ex2.html",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "",
    "text": "In this study, I will continue my geospatial analytics learning journey to demonstrate the potential value of geospatial data science and analysis (GDSA) to integrate publicly available data from multiple sources for building a spatial interaction models to determine factors affecting urban mobility patterns of public bus transit."
  },
  {
    "objectID": "take_home_ex2/take_home_ex2.html#setting-the-analytical-tools",
    "href": "take_home_ex2/take_home_ex2.html#setting-the-analytical-tools",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "2.1 Setting the Analytical Tools",
    "text": "2.1 Setting the Analytical Tools\nThe code chunk below installs and loads the various packages\n\npacman::p_load(tmap, sf, DT, stplanr, sp,\n               performance,reshape2,httr,\n               ggpubr, tidyverse)"
  },
  {
    "objectID": "take_home_ex2/take_home_ex2.html#data",
    "href": "take_home_ex2/take_home_ex2.html#data",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "3.1 Data",
    "text": "3.1 Data\n\n3.1.1 Importing the OD data\nFirstly, we will import the Passenger Volume by Origin Destination Bus Stops data set downloaded from LTA DataMall by using read_csv() of readr package. Oct 2023 data will be used. Detailed explanation of how the dataset is obtained is in Take Home Exercise 1.\n\nodbus &lt;- read_csv(\"data/aspatial/origin_destination_bus_202310.csv\")\n\nRows: 5694297 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): YEAR_MONTH, DAY_TYPE, PT_TYPE, ORIGIN_PT_CODE, DESTINATION_PT_CODE\ndbl (2): TIME_PER_HOUR, TOTAL_TRIPS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nLet use display the odbus tibble data table by using the code chunk below.\n\nglimpse(odbus)\n\nRows: 5,694,297\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-10\", \"2023-10\", \"2023-10\", \"2023-10\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKENDS/HOLIDAY\", \"WEEKDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 7, 14, 14, 10, 20, 20,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;chr&gt; \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"2028…\n$ DESTINATION_PT_CODE &lt;chr&gt; \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"2014…\n$ TOTAL_TRIPS         &lt;dbl&gt; 3, 5, 3, 5, 4, 1, 24, 2, 1, 7, 3, 2, 5, 1, 1, 1, 1…\n\n\nA quick check of odbus tibble data frame shows that the values in OROGIN_PT_CODE and DESTINATON_PT_CODE are in numeric data type. Hence, the code chunk below is used to convert these data values into character data type.\n\nodbus$ORIGIN_PT_CODE &lt;- as.factor(odbus$ORIGIN_PT_CODE)\nodbus$DESTINATION_PT_CODE &lt;- as.factor(odbus$DESTINATION_PT_CODE) \n\nFor the purpose of this exercise, we will extract commuting flows on weekday and between 6 and 9 o’clock. This will mainly be people going to school or work.\n\nodbus6_9 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 6 &\n           TIME_PER_HOUR &lt;= 9) %&gt;%\n  group_by(ORIGIN_PT_CODE,\n           DESTINATION_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n`summarise()` has grouped output by 'ORIGIN_PT_CODE'. You can override using\nthe `.groups` argument.\n\n\nWe will save the output in rds format for future used.\n\nwrite_rds(odbus6_9, \"data/rds/odbus6_9.rds\")\n\nThe code chunk below will be used to import the save odbus6_9.rds into R environment.\n\nodbus6_9 &lt;- read_rds(\"data/rds/odbus6_9.rds\")\n\n\n\n3.1.2 Importing Geospatial data into R\nFor the purpose of this exercise, three geospatial data will be used. They are:\n\nBusStop: This data provides the location of bus stop as at last quarter of 2023.\nMPSZ-2019: This data provides the sub-zone boundary of URA Master Plan 2019.\nHexagon: analytical hexagon data of 375m (this distance is the perpendicular distance between the centre of the hexagon and its edges) to represent the traffic analysis zone (TAZ).\n\nFirst 2 data sets are in ESRI shapefile format. Last file will be derived from R in the later setion\n\nbusstop &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `C:\\czx0727\\ISSS624_\\take_home_ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\czx0727\\ISSS624_\\take_home_ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\nmpsz\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((33222.98 29...\n2        CR MULTIPOLYGON (((28481.45 30...\n3        CR MULTIPOLYGON (((28087.34 30...\n4        WR MULTIPOLYGON (((14557.7 304...\n5        CR MULTIPOLYGON (((29542.53 31...\n6        CR MULTIPOLYGON (((35279.55 30...\n7        WR MULTIPOLYGON (((15772.59 21...\n8        WR MULTIPOLYGON (((19843.41 21...\n9        CR MULTIPOLYGON (((30870.53 22...\n10       CR MULTIPOLYGON (((26879.04 26...\n\n\n\nmpsz &lt;- write_rds(mpsz, \"data/rds/mpsz.rds\")"
  },
  {
    "objectID": "take_home_ex2/take_home_ex2.html#combining-busstop-and-mpsz",
    "href": "take_home_ex2/take_home_ex2.html#combining-busstop-and-mpsz",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "4.1 Combining Busstop and mpsz",
    "text": "4.1 Combining Busstop and mpsz\nCode chunk below populates the planning subzone code (i.e. SUBZONE_C) of mpsz sf data frame into busstop sf data frame.\n\nbusstop_mpsz &lt;- st_intersection(busstop, mpsz) %&gt;%\n  select(BUS_STOP_N, SUBZONE_C) \n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n\n\nwrite_rds(busstop_mpsz, \"data/rds/busstop_mpsz.rds\")"
  },
  {
    "objectID": "take_home_ex2/take_home_ex2.html#creating-hexagon-layer",
    "href": "take_home_ex2/take_home_ex2.html#creating-hexagon-layer",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "4.2 Creating Hexagon layer",
    "text": "4.2 Creating Hexagon layer\nNow, I am going to create a hexagon layer:\n\n# cell size of layer of 250m\narea_honeycomb_grid = st_make_grid(busstop_mpsz, c(750, 750), what = \"polygons\", square = FALSE, crs = 3414)\n\n# To sf and add grid ID\nhoneycomb_grid_sf = st_sf(area_honeycomb_grid)\n\n\nst_write(honeycomb_grid_sf, \"data/geospatial/hexagon.shp\",append=TRUE)\n\nUpdating layer `hexagon' to data source `data/geospatial/hexagon.shp' using driver `ESRI Shapefile'\nUpdating existing layer hexagon\nWriting 2299 features with 0 fields and geometry type Polygon.\n\n\n\nhexagon &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"hexagon\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `hexagon' from data source \n  `C:\\czx0727\\ISSS624_\\take_home_ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 42985 features and 1 field\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3220.122 ymin: 26049.09 xmax: 48970.12 ymax: 50947.32\nProjected CRS: SVY21 / Singapore TM"
  },
  {
    "objectID": "take_home_ex2/take_home_ex2.html#combine-hexagon-and-busstop_mpsz",
    "href": "take_home_ex2/take_home_ex2.html#combine-hexagon-and-busstop_mpsz",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "4.3 Combine Hexagon and Busstop_Mpsz",
    "text": "4.3 Combine Hexagon and Busstop_Mpsz\nNext, we are going to combine the datset busstop_mpsz and hexagon\n\nod_data &lt;- st_join(busstop_mpsz , hexagon,\n            by = c(\"geometry\" = \"geometry\"))"
  },
  {
    "objectID": "take_home_ex2/take_home_ex2.html#combine-hexagon-and-busstop",
    "href": "take_home_ex2/take_home_ex2.html#combine-hexagon-and-busstop",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "4.4 Combine Hexagon and Busstop",
    "text": "4.4 Combine Hexagon and Busstop\nCombing Hexagon and busstop will give the hexagon shape to the\n\nhexagon_busstop &lt;- st_join(hexagon, busstop, by = c(\"FID\" = \"FID\"))\n\n\nhexagon_busstop &lt;- hexagon_busstop %&gt;%\n  drop_na() %&gt;%\n  group_by(FID)\n\n\nwrite_rds(hexagon_busstop, \"data/rds/hexagon_busstop.rds\")"
  },
  {
    "objectID": "take_home_ex2/take_home_ex2.html#combine-odbus6_9-with-od_data",
    "href": "take_home_ex2/take_home_ex2.html#combine-odbus6_9-with-od_data",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "4.5 Combine odbus6_9 with od_data",
    "text": "4.5 Combine odbus6_9 with od_data\n\nod_data_1 &lt;- left_join(odbus6_9 , od_data,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %&gt;%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_SZ = SUBZONE_C,\n         DESTIN_BS = DESTINATION_PT_CODE)\n\nWarning in left_join(odbus6_9, od_data, by = c(ORIGIN_PT_CODE = \"BUS_STOP_N\")): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 10753 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nBefore continue, it is a good practice for us to check for duplicating records.\n\nduplicate &lt;- od_data_1 %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nIf duplicated records are found, the code chunk below will be used to retain the unique records.\n\nod_data_1 &lt;- unique(od_data_1)\n\nIt will be a good practice to confirm if the duplicating records issue has been addressed fully.\nNext, we will update od_data data frame with Combine Hexagon and Busstop_Mpsz.\n\nod_data_2 &lt;- left_join(od_data_1 , od_data,\n            by = c(\"DESTIN_BS\" = \"BUS_STOP_N\")) \n\nWarning in left_join(od_data_1, od_data, by = c(DESTIN_BS = \"BUS_STOP_N\")): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 10737 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nBefore continue, it is a good practice for us to check for duplicating records.\n\nduplicate &lt;- od_data_2 %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nIf duplicated records are found, the code chunk below will be used to retain the unique records.\n\nod_data_2 &lt;- unique(od_data_2)\n\n\nod_data_2 &lt;- od_data_2 %&gt;%\n  drop_na() %&gt;%\n  group_by(FID.x, FID.y) %&gt;%\n  summarise(MORNING_PEAK = sum(TRIPS))\n\n`summarise()` has grouped output by 'FID.x'. You can override using the\n`.groups` argument.\n\n\nIt is time to save the output into an rds file format.\n\nwrite_rds(od_data_2, \"data/rds/od_data_2.rds\")\n\n\nod_data_2 &lt;- read_rds(\"data/rds/od_data_2.rds\")"
  },
  {
    "objectID": "take_home_ex2/take_home_ex2.html#removing-intra-zonal-flows",
    "href": "take_home_ex2/take_home_ex2.html#removing-intra-zonal-flows",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "5.1 Removing intra-zonal flows",
    "text": "5.1 Removing intra-zonal flows\nI will not plot the intra-zonal flows. The code chunk below will be used to remove intra-zonal flows at the hexagon level. O-D matrix is as shown:\n\nod_data_3 &lt;- od_data_2[od_data_2$FID.x!=od_data_2$FID.y,]\n\n\nhead(od_data_3)\n\n# A tibble: 6 × 3\n# Groups:   FID.x [1]\n  FID.x FID.y MORNING_PEAK\n  &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;\n1     1    89            1\n2     1   110            1\n3     1   152            4\n4     1   179           93\n5     1   200            3\n6     1   202            1"
  },
  {
    "objectID": "take_home_ex2/take_home_ex2.html#creating-desire-lines",
    "href": "take_home_ex2/take_home_ex2.html#creating-desire-lines",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "5.2 Creating desire lines",
    "text": "5.2 Creating desire lines\nIn this code chunk below, od2line() of stplanr package is used to create the desire lines at the hexagon layer.\n\nflowLine &lt;- od2line(flow = od_data_3, \n                    zones = hexagon,\n                    zone_code = \"FID\")\n\nCreating centroids representing desire line start and end points."
  },
  {
    "objectID": "take_home_ex2/take_home_ex2.html#visualising-the-desire-lines",
    "href": "take_home_ex2/take_home_ex2.html#visualising-the-desire-lines",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "5.3 Visualising the desire lines",
    "text": "5.3 Visualising the desire lines\nTo visualise the resulting desire lines, the code chunk below is used.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(hexagon_busstop) +\n  tm_polygons() +\nflowLine %&gt;%  \ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.3)\n\nWarning: The shape mpsz is invalid. See sf::st_is_valid\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length"
  },
  {
    "objectID": "take_home_ex2/take_home_ex2.html#morning-peak-greater-than-or-equal-to-5000",
    "href": "take_home_ex2/take_home_ex2.html#morning-peak-greater-than-or-equal-to-5000",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "5.4 Morning Peak (Greater than or equal to 5000)",
    "text": "5.4 Morning Peak (Greater than or equal to 5000)\nWhen the flow data are very messy and highly skewed like the one shown above, it is wiser to focus on selected flows, for example flow greater than or equal to 5000 as shown below.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(hexagon_busstop) +\n  tm_polygons() +\nflowLine %&gt;%  \n  filter(MORNING_PEAK &gt;= 5000) %&gt;%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.3)\n\nWarning: The shape mpsz is invalid. See sf::st_is_valid\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\nFor passengers volume greater or equal to 5000, we can observe from the map above that between Woodlands and area such as Tuas, Jurong, Woodlands and Tampines areas. There are also small pockets of areas in the central of Singapore."
  },
  {
    "objectID": "take_home_ex2/take_home_ex2.html#morning-peak-greater-than-or-equal-to-10000",
    "href": "take_home_ex2/take_home_ex2.html#morning-peak-greater-than-or-equal-to-10000",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "5.5 Morning Peak (Greater than or equal to 10000)",
    "text": "5.5 Morning Peak (Greater than or equal to 10000)\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(hexagon_busstop) +\n  tm_polygons() +\nflowLine %&gt;%  \n  filter(MORNING_PEAK &gt;= 10000) %&gt;%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.3)\n\nWarning: The shape mpsz is invalid. See sf::st_is_valid\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\nFor passenger volumes greater than 10,000, we observe in areas between Woodlands and Tuas, and also Woodlands and Tampines."
  },
  {
    "objectID": "take_home_ex2/take_home_ex2.html#morning-peak-greater-than-or-equal-to-50000",
    "href": "take_home_ex2/take_home_ex2.html#morning-peak-greater-than-or-equal-to-50000",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "5.6 Morning Peak (Greater than or equal to 50000)",
    "text": "5.6 Morning Peak (Greater than or equal to 50000)\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(hexagon_busstop) +\n  tm_polygons() +\nflowLine %&gt;%  \n  filter(MORNING_PEAK &gt;= 50000) %&gt;%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.3)\n\nWarning: The shape mpsz is invalid. See sf::st_is_valid\n\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\nFor passengers volume equal or greater than 50,000, it is concentrated in Woodlands region."
  },
  {
    "objectID": "take_home_ex2/take_home_ex2.html#geospatial",
    "href": "take_home_ex2/take_home_ex2.html#geospatial",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "6.1 Geospatial",
    "text": "6.1 Geospatial\nFor geospatial, I will be using the following:\n\nBusiness: This dataset is used to illustrated people commuting to work\n\n\nbusiness &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"Business\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `Business' from data source \n  `C:\\czx0727\\ISSS624_\\take_home_ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 6550 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3669.148 ymin: 25408.41 xmax: 47034.83 ymax: 50148.54\nProjected CRS: SVY21 / Singapore TM\n\n\n\nhexagon_busstop$`BUSINESS_COUNT`&lt;- lengths(\n  st_intersects(\n    hexagon_busstop, business))\n\n\nsummary(hexagon_busstop$BUSINESS_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   5.696   5.000 117.000 \n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(hexagon_busstop) +\n  tm_polygons() +\ntm_shape(business) +\n  tm_dots() \n\nWarning: The shape mpsz is invalid. See sf::st_is_valid\n\n\n\n\n\n\nFinServ: This dataset is used to illustrate people working in the financial services sector\n\n\nfinserv &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"FinServ\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `FinServ' from data source \n  `C:\\czx0727\\ISSS624_\\take_home_ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 3320 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4881.527 ymin: 25171.88 xmax: 46526.16 ymax: 49338.02\nProjected CRS: SVY21 / Singapore TM\n\n\n\nhexagon_busstop$`FINANCE_COUNT`&lt;- lengths(\n  st_intersects(\n    hexagon_busstop, finserv))\n\n\nsummary(hexagon_busstop$FINANCE_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   1.000   4.286   5.000  91.000 \n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(hexagon_busstop) +\n  tm_polygons() +\ntm_shape(finserv) +\n  tm_dots() \n\nWarning: The shape mpsz is invalid. See sf::st_is_valid\n\n\n\n\n\n\nTrain Station Exit Layer: This dataset is used to indicate if there is any potential transition from train station to busstop\n\n\ntrain &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"Train_Station_Exit_Layer\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `Train_Station_Exit_Layer' from data source \n  `C:\\czx0727\\ISSS624_\\take_home_ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 565 features and 2 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6134.086 ymin: 27499.7 xmax: 45356.36 ymax: 47865.92\nProjected CRS: SVY21\n\n\n\nhexagon_busstop$`TRAIN_COUNT`&lt;- lengths(\n  st_intersects(\n    hexagon_busstop, train))\n\n\nsummary(hexagon_busstop$TRAIN_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   0.749   1.000  11.000 \n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(hexagon_busstop) +\n  tm_polygons() +\ntm_shape(train) +\n  tm_dots() \n\nWarning: The shape mpsz is invalid. See sf::st_is_valid\n\n\n\n\n\n\nRapid Transit System Station\n\n\nmrt &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"RapidTransitSystemStation\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `RapidTransitSystemStation' from data source \n  `C:\\czx0727\\ISSS624_\\take_home_ex2\\data\\geospatial' using driver `ESRI Shapefile'\n\n\nWarning in CPL_read_ogr(dsn, layer, query, as.character(options), quiet, : GDAL\nMessage 1: Non closed ring detected. To avoid accepting it, set the\nOGR_GEOMETRY_ACCEPT_UNCLOSED_RING configuration option to NO\n\n\nSimple feature collection with 220 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 6068.209 ymin: 27478.44 xmax: 45377.5 ymax: 47913.58\nProjected CRS: SVY21\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(hexagon_busstop) +\n  tm_polygons() +\ntm_shape(train) +\n  tm_dots() \n\nWarning: The shape mpsz is invalid. See sf::st_is_valid\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\ntmap_options(check.and.fix = TRUE) is used as Non closed ring is detected in this dataset\n\n\n\n\n\n\n\n\nImportant\n\n\n\nDue to issue with the shape file, it will not be used in Spatial Interaction Models"
  },
  {
    "objectID": "take_home_ex2/take_home_ex2.html#aspatial",
    "href": "take_home_ex2/take_home_ex2.html#aspatial",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "6.2 Aspatial",
    "text": "6.2 Aspatial\nFor aspatial, I will be using the following:\n\nHDB: This dataset is used to understand the location of HBD in the hexagon layer\n\n\ndata &lt;- read.csv(\"data/aspatial/hdb.csv\")\n\n\ncoordinates &lt;- data[, c(\"lng\", \"lat\")]  \nspatial_points &lt;- SpatialPointsDataFrame(coordinates, data)\n\nConvert to CRS3414:\n\n# Create a SpatialPoints object\ncoordinates &lt;- data[, c(\"lng\", \"lat\")]\nspatial_points &lt;- SpatialPoints(coords = coordinates)\n\n# Define the current CRS (WGS84 - EPSG:4326)\nproj4string(spatial_points) &lt;- CRS(\"+proj=longlat +datum=WGS84\")\n\n# Convert SpatialPoints to an sf object\nsf_points &lt;- st_as_sf(spatial_points)\n\n# Define EPSG:3414 CRS\nepsg_3414_crs &lt;- st_crs(3414)\n\n# Transform the sf object to EPSG:3414\nsf_points_3414 &lt;- st_transform(sf_points, crs = epsg_3414_crs)\n\n# Convert back to SpatialPoints\nspatial_points_3414 &lt;- as(sf_points_3414, \"Spatial\")\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(hexagon_busstop) +\n  tm_polygons() +\ntm_shape(spatial_points_3414) +\n  tm_dots()\n\nWarning: The shape mpsz is invalid. See sf::st_is_valid\n\n\n\n\n\n\nsf_spatial_points_3414 &lt;- st_as_sf(spatial_points_3414)\n\nintersections &lt;- st_intersects(hexagon_busstop, sf_spatial_points_3414)\n\nhexagon_busstop$HDB_COUNT &lt;- lengths(intersections)\n\n\nsummary(hexagon_busstop$HDB_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    8.00   17.66   32.00   74.00 \n\n\n\nSchool Directory and Information - Dataset is taken from Data@Gov. This information is useful as the morning period will consist of students going to school\n\nConcepts learned from In-Class Ex 4 will be used to extract the data from SLA API\n\nurl&lt;-\"https://www.onemap.gov.sg/api/common/elastic/search\"\n\ncsv&lt;-read_csv(\"data/aspatial/Generalinformationofschools.csv\")\n\nRows: 346 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (31): school_name, url_address, address, postal_code, telephone_no, tele...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npostcodes&lt;-csv$`postal_code`\n\nfound&lt;-data.frame()\nnot_found&lt;-data.frame()\n\nfor(postcode in postcodes){\n  query&lt;-list('searchVal'=postcode,'returnGeom'='Y','getAddrDetails'='Y','pageNum'='1')\n  res&lt;- GET(url,query=query)\n  \n  if((content(res)$found)!=0){\n    found&lt;-rbind(found,data.frame(content(res))[4:13])\n  } else{\n    not_found = data.frame(postcode)\n  }\n}\n\nNext, the code chunk below will be used to combine both found and not_found data.frames into a single tibble data.frame called merged. At the same time, we will write merged and not_found tibble data.frames into two separate csv files called schools and not_found respectively.\n\nmerged = merge(csv, found, by.x = 'postal_code', by.y = 'results.POSTAL', all = TRUE)\nwrite.csv(merged, file = \"data/aspatial/schools.csv\")\nwrite.csv(not_found, file = \"data/aspatial/not_found.csv\")\n\nI will manually clean up for ZhengHua Secondary School (link). File is saved as schools1.csv\nNext, I will import schools1.csv into R environment and at the same time tidying the data by selecting only the necessary fields as well as rename some fields.\n\nschools &lt;- read_csv(\"data/aspatial/schools1.csv\") %&gt;%\n  rename(latitude = \"results.LATITUDE\",\n         longitude = \"results.LONGITUDE\")%&gt;%\n  select(postal_code, school_name, latitude, longitude)\n\nNew names:\nRows: 350 Columns: 41\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(35): school_name, url_address, address, telephone_no, telephone_no_2, f... dbl\n(6): ...1, postal_code, results.X, results.Y, results.LATITUDE, results...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\n\nI convert schools1 tibble data.frame data into a simple feature tibble data.frame called schools_sf by using values in latitude and longitude fields.\n\nschools_sf &lt;- st_as_sf(schools, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %&gt;%\n  st_transform(crs = 3414)\n\nPlot is shown below:\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(hexagon_busstop) +\n  tm_polygons() +\ntm_shape(schools_sf) +\n  tm_dots()\n\nWarning: The shape mpsz is invalid. See sf::st_is_valid\n\n\n\n\n\nI will count count the number of schools located inside the hexagon layer.\n\nhexagon_busstop$`SCHOOL_COUNT`&lt;- lengths(\n  st_intersects(\n    hexagon_busstop, schools_sf))\n\nI will examine the summary statistics of the derived variable.\n\nsummary(hexagon_busstop$`SCHOOL_COUNT`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.0000  0.0000  0.4354  1.0000  5.0000 \n\n\n\n\n\n\n\n\nImportant\n\n\n\nThe summary statistics above reveals that there are excessive 0 values in SCHOOL_COUNT field. If log() is going to use to transform this field, additional step is required to ensure that all 0 will be replaced with a value between 0 and 1 but not 0 neither 1.\n\n\nThe data will be joined with od_data:\n\nhexagon_busstop_tidy &lt;- hexagon_busstop %&gt;%\n  st_drop_geometry() %&gt;%\n  select(FID, SCHOOL_COUNT, BUSINESS_COUNT, FINANCE_COUNT,TRAIN_COUNT,HDB_COUNT)\n\n\nflow_data &lt;- od_data_2 %&gt;%\n  left_join(hexagon_busstop_tidy,\n            by = c(\"FID.y\" = \"FID\"))\n\nWarning in left_join(., hexagon_busstop_tidy, by = c(FID.y = \"FID\")): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 9 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n\n\n\n\n\n\nNote\n\n\n\nFID.y is the destination. It is unique join field between od_data_2 and hexagon_busstop_tidy.\n\n\n\nsummary(flow_data)\n\n     FID.x          FID.y       MORNING_PEAK      SCHOOL_COUNT   \n Min.   :   1   Min.   :   1   Min.   :    1.0   Min.   :0.0000  \n 1st Qu.:1338   1st Qu.:1337   1st Qu.:    7.0   1st Qu.:0.0000  \n Median :1709   Median :1723   Median :   34.0   Median :0.0000  \n Mean   :1689   Mean   :1682   Mean   :  343.3   Mean   :0.4483  \n 3rd Qu.:2049   3rd Qu.:2033   3rd Qu.:  160.0   3rd Qu.:1.0000  \n Max.   :2951   Max.   :2951   Max.   :74894.0   Max.   :5.0000  \n                                                 NA's   :144     \n BUSINESS_COUNT   FINANCE_COUNT     TRAIN_COUNT       HDB_COUNT    \n Min.   :  0.00   Min.   : 0.000   Min.   : 0.000   Min.   : 0.00  \n 1st Qu.:  0.00   1st Qu.: 1.000   1st Qu.: 0.000   1st Qu.: 0.00  \n Median :  1.00   Median : 4.000   Median : 0.000   Median :13.00  \n Mean   :  5.84   Mean   : 8.147   Mean   : 1.356   Mean   :19.04  \n 3rd Qu.:  5.00   3rd Qu.: 9.000   3rd Qu.: 2.000   3rd Qu.:33.00  \n Max.   :117.00   Max.   :91.000   Max.   :11.000   Max.   :74.00  \n NA's   :144      NA's   :144      NA's   :144      NA's   :144    \n\n\nThe code chunk below will be used to replace zero values to 0.99.\n\nflow_data$SCHOOL_COUNT &lt;- ifelse(\n  flow_data$SCHOOL_COUNT == 0,\n  0.99, flow_data$SCHOOL_COUNT)\nflow_data$BUSINESS_COUNT &lt;- ifelse(\n  flow_data$BUSINESS_COUNT == 0,\n  0.99, flow_data$BUSINESS_COUNT)\nflow_data$FINANCE_COUNT &lt;- ifelse(\n  flow_data$FINANCE_COUNT == 0,\n  0.99, flow_data$FINANCE_COUNT)\nflow_data$TRAIN_COUNT &lt;- ifelse(\n  flow_data$TRAIN_COUNT == 0,\n  0.99, flow_data$TRAIN_COUNT)\nflow_data$HDB_COUNT &lt;- ifelse(\n  flow_data$HDB_COUNT == 0,\n  0.99, flow_data$HDB_COUNT)\n\n\nsummary(flow_data)\n\n     FID.x          FID.y       MORNING_PEAK      SCHOOL_COUNT  \n Min.   :   1   Min.   :   1   Min.   :    1.0   Min.   :0.990  \n 1st Qu.:1338   1st Qu.:1337   1st Qu.:    7.0   1st Qu.:0.990  \n Median :1709   Median :1723   Median :   34.0   Median :0.990  \n Mean   :1689   Mean   :1682   Mean   :  343.3   Mean   :1.119  \n 3rd Qu.:2049   3rd Qu.:2033   3rd Qu.:  160.0   3rd Qu.:1.000  \n Max.   :2951   Max.   :2951   Max.   :74894.0   Max.   :5.000  \n                                                 NA's   :144    \n BUSINESS_COUNT    FINANCE_COUNT     TRAIN_COUNT       HDB_COUNT    \n Min.   :  0.990   Min.   : 0.990   Min.   : 0.990   Min.   : 0.99  \n 1st Qu.:  0.990   1st Qu.: 1.000   1st Qu.: 0.990   1st Qu.: 0.99  \n Median :  1.000   Median : 4.000   Median : 0.990   Median :13.00  \n Mean   :  6.293   Mean   : 8.375   Mean   : 1.951   Mean   :19.33  \n 3rd Qu.:  5.000   3rd Qu.: 9.000   3rd Qu.: 2.000   3rd Qu.:33.00  \n Max.   :117.000   Max.   :91.000   Max.   :11.000   Max.   :74.00  \n NA's   :144       NA's   :144      NA's   :144      NA's   :144    \n\n\nNext we will remove duplicate record:\n\nduplicate &lt;- flow_data %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\n\nflow_data &lt;- unique(flow_data)\n\n\nsummary(flow_data)\n\n     FID.x          FID.y       MORNING_PEAK      SCHOOL_COUNT  \n Min.   :   1   Min.   :   1   Min.   :    1.0   Min.   :0.990  \n 1st Qu.:1313   1st Qu.:1318   1st Qu.:    6.0   1st Qu.:0.990  \n Median :1702   Median :1700   Median :   31.0   Median :0.990  \n Mean   :1674   Mean   :1669   Mean   :  300.4   Mean   :1.098  \n 3rd Qu.:2032   3rd Qu.:2026   3rd Qu.:  143.0   3rd Qu.:1.000  \n Max.   :2951   Max.   :2951   Max.   :74894.0   Max.   :5.000  \n                                                 NA's   :144    \n BUSINESS_COUNT    FINANCE_COUNT     TRAIN_COUNT       HDB_COUNT    \n Min.   :  0.990   Min.   : 0.990   Min.   : 0.990   Min.   : 0.99  \n 1st Qu.:  0.990   1st Qu.: 0.990   1st Qu.: 0.990   1st Qu.: 0.99  \n Median :  1.000   Median : 2.000   Median : 0.990   Median : 6.00  \n Mean   :  5.881   Mean   : 7.324   Mean   : 1.773   Mean   :15.52  \n 3rd Qu.:  5.000   3rd Qu.: 7.000   3rd Qu.: 2.000   3rd Qu.:27.00  \n Max.   :117.000   Max.   :91.000   Max.   :11.000   Max.   :74.00  \n NA's   :144       NA's   :144      NA's   :144      NA's   :144    \n\n\nI will save flow_data sf tibble data.frame into an rds file and call the file flow_data_tidy.\n\nwrite_rds(flow_data,\n          \"data/rds/flow_data_tidy.rds\")\n\nThe explanatory variables to be used in the Spatial Interaction Modelling will be :\n\nBusiness\nFinance Service\nTrain Station Exit Layer\nHDB\nSchool Directory and information"
  },
  {
    "objectID": "take_home_ex2/take_home_ex2.html#converting-from-sf-data.table-to-spatialpolygonsdataframe",
    "href": "take_home_ex2/take_home_ex2.html#converting-from-sf-data.table-to-spatialpolygonsdataframe",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "7.1 Converting from sf data.table to SpatialPolygonsDataFrame",
    "text": "7.1 Converting from sf data.table to SpatialPolygonsDataFrame\nFirst as.Spatial() will be used to convert mpsz from sf tibble data frame to SpatialPolygonsDataFrame of sp object as shown in the code chunk below\n\nhexagon_busstop_sp &lt;- as(hexagon_busstop, \"Spatial\")\nhexagon_busstop_sp\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 5152 \nextent      : 3320.122, 48495.12, 26106.82, 50499.87  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 9\nnames       :  FID, BUS_STOP_N, BUS_ROOF_N,       LOC_DESC, BUSINESS_COUNT, FINANCE_COUNT, TRAIN_COUNT, HDB_COUNT, SCHOOL_COUNT \nmin values  :    1,      01012,        B01,  18 WOODSVILLE,              0,             0,           0,         0,            0 \nmax values  : 2951,      99189,        UNK, ZUELLIG PHARMA,            117,            91,          11,        74,            5"
  },
  {
    "objectID": "take_home_ex2/take_home_ex2.html#computing-the-distance-matrix",
    "href": "take_home_ex2/take_home_ex2.html#computing-the-distance-matrix",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "7.2 Computing the distance matrix",
    "text": "7.2 Computing the distance matrix\nNext, spDists() of sp package will be used to compute the Euclidean distance between the centroids of the hexagon layer.\n\ndist &lt;- spDists(hexagon_busstop_sp, \n                longlat = FALSE)\nhead(dist, n=c(10, 10))\n\n          [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]\n [1,]    0.000  650.000 2343.608 1125.833 1125.833 2978.674 4059.249 1719.738\n [2,]  650.000    0.000 2251.666  650.000  650.000 2833.284 3953.796 1300.000\n [3,] 2343.608 2251.666    0.000 1719.738 1719.738  650.000 1719.738 1300.000\n [4,] 1125.833  650.000 1719.738    0.000    0.000 2251.666 3377.499  650.000\n [5,] 1125.833  650.000 1719.738    0.000    0.000 2251.666 3377.499  650.000\n [6,] 2978.674 2833.284  650.000 2251.666 2251.666    0.000 1125.833 1719.738\n [7,] 4059.249 3953.796 1719.738 3377.499 3377.499 1125.833    0.000 2833.284\n [8,] 1719.738 1300.000 1300.000  650.000  650.000 1719.738 2833.284    0.000\n [9,] 2600.000 2343.608  650.000 1719.738 1719.738  650.000 1719.738 1125.833\n[10,] 2600.000 2343.608  650.000 1719.738 1719.738  650.000 1719.738 1125.833\n          [,9]    [,10]\n [1,] 2600.000 2600.000\n [2,] 2343.608 2343.608\n [3,]  650.000  650.000\n [4,] 1719.738 1719.738\n [5,] 1719.738 1719.738\n [6,]  650.000  650.000\n [7,] 1719.738 1719.738\n [8,] 1125.833 1125.833\n [9,]    0.000    0.000\n[10,]    0.000    0.000\n\n\nNext, I will rename column and rows based on FID\n\nsz_names &lt;- hexagon_busstop$FID\n\n\ncolnames(dist) &lt;- paste0(sz_names)\nrownames(dist) &lt;- paste0(sz_names)\n\nNext, we will pivot the distance matrix into a long table by using the row and column subzone codes as show in the code chunk below.\n\ndistPair &lt;- melt(dist) %&gt;%\n  rename(dist = value)\nhead(distPair, 10)\n\n   Var1 Var2     dist\n1     1    1    0.000\n2    44    1  650.000\n3    46    1 2343.608\n4    66    1 1125.833\n5    66    1 1125.833\n6    68    1 2978.674\n7    69    1 4059.249\n8    88    1 1719.738\n9    89    1 2600.000\n10   89    1 2600.000\n\n\nTo update the intra-zonal distances, I will select and find out the minimum value of the distance by using summary().\n\ndistPair %&gt;%\n  filter(dist &gt; 0) %&gt;%\n  summary()\n\n      Var1           Var2           dist      \n Min.   :   1   Min.   :   1   Min.   :  650  \n 1st Qu.:1086   1st Qu.:1086   1st Qu.: 7881  \n Median :1618   Median :1618   Median :12654  \n Mean   :1547   Mean   :1547   Mean   :13322  \n 3rd Qu.:2030   3rd Qu.:2030   3rd Qu.:17884  \n Max.   :2951   Max.   :2951   Max.   :44982  \n\n\nNext, a constant distance value of 300m is added into intra-zones distance.\n\ndistPair$dist &lt;- ifelse(distPair$dist == 0,\n                        300, distPair$dist)\n\nThe code chunk below will be used to check the result data.frame.\n\ndistPair %&gt;%\n  summary()\n\n      Var1           Var2           dist      \n Min.   :   1   Min.   :   1   Min.   :  300  \n 1st Qu.:1087   1st Qu.:1087   1st Qu.: 7881  \n Median :1618   Median :1618   Median :12654  \n Mean   :1547   Mean   :1547   Mean   :13305  \n 3rd Qu.:2030   3rd Qu.:2030   3rd Qu.:17884  \n Max.   :2951   Max.   :2951   Max.   :44982  \n\n\nThe code chunk below is used to rename the origin and destination fields.\n\ndistPair &lt;- distPair %&gt;%\n  rename(orig = Var1,\n         dest = Var2)\n\nLastly, the code chunk below is used to save the dataframe for future use.\n\nwrite_rds(distPair, \"data/rds/distPair.rds\")"
  },
  {
    "objectID": "take_home_ex2/take_home_ex2.html#preparing-flow-data",
    "href": "take_home_ex2/take_home_ex2.html#preparing-flow-data",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "8.1 Preparing Flow Data",
    "text": "8.1 Preparing Flow Data"
  }
]